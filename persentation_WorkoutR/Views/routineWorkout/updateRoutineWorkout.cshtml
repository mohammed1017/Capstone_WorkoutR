@model persentation_WorkoutR.Models.routineWorkoutModel
@using persentation_WorkoutR.Models

@{
    ViewBag.Title = "updateRoutineWorkout";
}


@{
    List<SelectListItem> exercise = new List<SelectListItem>();
    List<exerciseModel> exerciseList = (List<exerciseModel>)Session["viewExercise"];

    for (int i = 0; i < exerciseList.Count(); i++)
    {
        exercise.Add(new SelectListItem
        {
            Text = exerciseList[i].exerciseName,
            Value = exerciseList[i].exerciseID.ToString()
        });
    }

}

<style>
    input,
    button,
    select,
    optgroup,
    textarea {
        margin: 0;
        font-size: inherit;
        line-height: inherit;
        border: 1px solid #bbb;
        border-radius: .25rem;
        text-align: center;
        float: right;
    }

    button,
    input {
        float: right;
        overflow: visible;
        text-align: center;
    }

    button,
    select {
        text-transform: none;
        float: right;
        width: 170px;
    }
</style>
<br />
@Html.ActionLink("Back to Routines", "viewRoutine", "routine")
<h2>Update Routine Exercises</h2><br />
<div class="w3ls-exercise box box--big">
    @using (Html.BeginForm())
    {
        <div class="container">
            @Html.AntiForgeryToken()

            <div class="form-group">

                @Html.LabelFor(m => m.FK_exerciseID)
                @Html.DropDownListFor(m => m.FK_exerciseID, new SelectList(exercise, "Value", "Text"))
                @Html.ValidationMessageFor(m => m.FK_routineWorkoutID, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">

                @Html.HiddenFor(m => m.FK_routineWorkoutID)
                @Html.HiddenFor(m => m.FK_routineWorkoutID, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.FK_routineWorkoutID, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.routineWSets)
                @Html.EditorFor(m => m.routineWSets, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.routineWSets, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.routineWReps)
                @Html.EditorFor(m => m.routineWReps, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.routineWReps, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.routineWRest)
                @Html.EditorFor(m => m.routineWRest, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.routineWRest, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>